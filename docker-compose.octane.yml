version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: octane-production.dockerfile
    container_name: tribe-octane
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
    volumes:
      - storage_data:/var/www/html/storage
      - ./logs:/var/www/html/storage/logs
    depends_on:
      - database
      - redis
    networks:
      - tribe-network
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  database:
    image: postgres:15-alpine
    container_name: tribe-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tribe_production
      POSTGRES_USER: tribe_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tribe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tribe_user -d tribe_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: tribe-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - tribe-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: tribe-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - storage_data:/var/www/html/storage:ro
    depends_on:
      - app
    networks:
      - tribe-network

  # Queue Workers
  queue-default:
    build:
      context: .
      dockerfile: octane-production.dockerfile
    container_name: tribe-queue-default
    restart: unless-stopped
    command: php artisan queue:work redis --queue=default --sleep=3 --tries=3 --max-time=3600
    volumes:
      - storage_data:/var/www/html/storage
    depends_on:
      - database
      - redis
    networks:
      - tribe-network

  queue-notifications:
    build:
      context: .
      dockerfile: octane-production.dockerfile
    container_name: tribe-queue-notifications
    restart: unless-stopped
    command: php artisan queue:work redis --queue=notifications --sleep=1 --tries=2 --timeout=60
    volumes:
      - storage_data:/var/www/html/storage
    depends_on:
      - database
      - redis
    networks:
      - tribe-network

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: octane-production.dockerfile
    container_name: tribe-scheduler
    restart: unless-stopped
    command: >
      sh -c "while true; do
        php artisan schedule:run
        sleep 60
      done"
    volumes:
      - storage_data:/var/www/html/storage
    depends_on:
      - database
      - redis
    networks:
      - tribe-network

networks:
  tribe-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  storage_data:
    driver: local